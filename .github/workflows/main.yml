name: Java CI/CD with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: |
          mvn clean install
          mkdir artifacts && cp target/*.jar artifacts
          cd artifacts && ls
      - name: Save artifact
        uses: actions/upload-artifact@v3
        with:
          name: github-action-artifact
          path: artifacts
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: alisson4
          password: dckr_pat_t_YSQEJrcJyyKTEJ_V1mTRgV8JU
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: alisson4/spring-boot-github-action-demo:latest

  test:
    runs-on: ubuntu-latest
    needs: build
    continue-on-error: true  # Ignora falhas nos testes
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Run tests
        run: mvn test

  deploy:
    needs: build
    runs-on: [aws-ec2]
    steps:
      - name: Pull Image from Docker Hub
        run: sudo docker pull alisson4/spring-boot-github-action-demo:latest
      - name: Delete old container
        run: sudo docker rm -f spring-boot-app-container || true  # Ignora se o container n√£o existir
      - name: Run Docker Image
        run: sudo docker run -d -p 8080:8080 --name spring-boot-app-container alisson4/spring-boot-github-action-demo
